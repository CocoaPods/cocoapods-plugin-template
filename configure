#!/usr/bin/env ruby

module Pod
  class TemplateConfigurator

    attr_reader :plugin_command
    attr_reader :plugin_file
    attr_reader :plugin_name

    def initialize(plugin_name)
      unless plugin_name
        puts "Please specify a plugin name on the command line."
        exit
      end

      @plugin_command = plugin_name.split('-').last
      @plugin_file = plugin_name.dup
      @plugin_name = plugin_name
    end

    def run
      unless plugin_name =~ /cocoapods-.+/
        puts "Plugin name needs to be of the form 'cocoapods-*'."
        exit
      end

      puts "Configuring #{plugin_name}"
      print_info
      clean_template_files
      replace_variables_in_files
      rename_template_files
      reinitialize_git_repo
    end

    #----------------------------------------#

    def print_info
      puts "user name:#{user_name}"
      puts "user email:#{user_email}"
      puts "year:#{year}"
    end

    def clean_template_files
      `rm -rf configure`
      `rm -rf README.md`
      `rm -rf LICENSE`
    end

    def replace_variables_in_files
      file_names = [
        'PLUGIN_LICENSE.txt',
        'PLUGIN_README.md',
        'Gemfile',
        'PLUGIN.gemspec.template',
        'lib/PLUGIN.rb',
        'lib/PLUGIN/gem_version.rb',
        'lib/cocoapods_plugin.rb',
        'lib/PLUGIN/command.rb',
        'lib/PLUGIN/command/COMMAND.rb',
        'spec/command/COMMAND_spec.rb'
      ]

      file_names.each do |file_name|
        text = File.read(file_name)
        text.gsub!("${PLUGIN_CLASS}", plugin_name.split('-').last.capitalize)
        text.gsub!("${PLUGIN_COMMAND}", plugin_command)
        text.gsub!("${PLUGIN_MODULE}", plugin_name.split('-').map(&:capitalize).join(''))
        text.gsub!("${PLUGIN_FILE}", plugin_file)
        text.gsub!("${PLUGIN_NAME}", plugin_name)
        text.gsub!("${USER_NAME}", user_name)
        text.gsub!("${USER_EMAIL}", user_email)
        text.gsub!("${YEAR}", year)
        File.open(file_name, "w") { |file| file.puts text }
      end
    end

    def rename_template_files
      `mv PLUGIN_LICENSE.txt LICENSE.txt`
      `mv PLUGIN_README.md README.md`
      `mv PLUGIN.gemspec.template #{plugin_file}.gemspec`
      `mv lib/PLUGIN.rb lib/#{plugin_file}.rb`
      `mv lib/PLUGIN lib/#{plugin_file}`
      `mv lib/#{plugin_file}/command/COMMAND.rb lib/#{plugin_file}/command/#{plugin_command}.rb`
      `mv spec/command/COMMAND_spec.rb spec/command/#{plugin_command}_spec.rb`
    end

    def reinitialize_git_repo
      `rm -rf .git`
      `git init`
      `git add -A`
      `git commit -m "Initial commit"`
    end

    #----------------------------------------#

    def user_name
      (ENV['GIT_COMMITTER_NAME'] || `git config user.name`).strip
    end

    def user_email
      (ENV['GIT_COMMITTER_EMAIL'] || `git config user.email`).strip
    end

    def year
      Time.now.year.to_s
    end

    #----------------------------------------#
  end
end

#-----------------------------------------------------------------------------#

# TODO: Handle description
# TODO: Handle usage
# TODO: Handle GitHub URL

plugin_name = ARGV.shift
Pod::TemplateConfigurator.new(plugin_name).run
